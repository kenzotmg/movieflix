name: CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:

env:
  APP_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-app

jobs:
  test_app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # cria arquivos .secrets a partir dos secrets do GitHub
      - name: Create APP secrets
        run: |
          mkdir -p .secrets
          printf "%s" "${{ secrets.APP_DB_USER }}"     > .secrets/app_db_user
          printf "%s" "${{ secrets.APP_DB_PASSWORD }}" > .secrets/app_db_password
          printf "%s" "${{ secrets.APP_DB_NAME }}"     > .secrets/app_db_name

      - name: Build app image
        run: docker build -t movieflix-app:ci ./app

      - name: Up stack (app)
        run: |
          docker compose -f docker-compose.app.yml up -d db-app app nginx
          for i in {1..40}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health || true)
            [ "$code" = "200" ] && exit 0
            echo "Waiting app... $i"; sleep 2
          done
          docker compose logs db-app app nginx
          exit 1

      - name: Down stack (app)
        if: always()
        run: docker compose -f docker-compose.app.yml down -v

  etl_job:
    runs-on: ubuntu-latest
    needs: test_app
    steps:
      - uses: actions/checkout@v4

      - name: Create DW secrets
        run: |
          mkdir -p .secrets
          printf "%s" "${{ secrets.DW_DB_USER }}"     > .secrets/dw_db_user
          printf "%s" "${{ secrets.DW_DB_PASSWORD }}" > .secrets/dw_db_password
          printf "%s" "${{ secrets.DW_DB_NAME }}"     > .secrets/dw_db_name

      - name: Build ETL image
        run: docker build -t movieflix-etl:ci ./fluxo-de-dados/etl

      - name: Up only DW
        run: docker compose -f docker-compose.etl.yml up -d db-dw

      - name: Run ETL (load DW + create views + dashboard)
        run: docker compose -f docker-compose.etl.yml run --rm etl

      - name: Smoke SQL on views
        run: |
          docker compose exec -T db-dw sh -lc \
            'export PGPASSWORD="$(cat '${{ secrets.DW_DB_PASSWORD }}')" &&\
             psql -U $(cat /run/secrets/dw_db_user) -d $(cat /run/secrets/dw_db_name) -c "select count(*) from dm.v_top15_votes;"'

      - name: Down DW
        if: always()
        run: docker compose down -v

  push_images:
    runs-on: ubuntu-latest
    needs: [test_app, etl_job]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # push app
      - name: Build & Push app
        uses: docker/build-push-action@v6
        with:
          context: ./app
          push: true
          tags: |
            ${{ env.APP_IMAGE }}:${{ github.sha }}
            ${{ env.APP_IMAGE }}:latest
