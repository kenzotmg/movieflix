services:
  db-app:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER_FILE: /run/secrets/app_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/app_db_password
      POSTGRES_DB_FILE: /run/secrets/app_db_name
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d:ro
    secrets:
      - app_db_user
      - app_db_password
      - app_db_name
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
  db-dw:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER_FILE: /run/secrets/dw_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/dw_db_password
      POSTGRES_DB_FILE: /run/secrets/dw_db_name
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./fluxo-de-dados/dw/:/docker-entrypoint-initdb.d:ro
    secrets:
      - dw_db_user
      - dw_db_password
      - dw_db_name
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
  app:
    build: .
    restart: unless-stopped
    depends_on:
      db-app:
        condition: service_healthy
    environment:
      DB_HOST: db-app
      DB_PORT: "5432"
      DB_USER_FILE: /run/secrets/app_db_user
      DB_PASSWORD_FILE: /run/secrets/app_db_password
      DB_NAME_FILE: /run/secrets/app_db_name
    secrets:
      - app_db_user
      - app_db_password
      - app_db_name

  etl:
    build: ./fluxo-de-dados/etl/.
    depends_on:
      db-dw: { condition: service_healthy }
    environment:
      DB_HOST: db-dw
      DB_PORT: "5432"
      DB_USER_FILE: /run/secrets/dw_db_user
      DB_PASSWORD_FILE: /run/secrets/dw_db_password
      DB_NAME_FILE: /run/secrets/dw_db_name
      IMDB_CSV: /data_lake/imdb_top_1000_raw.csv
    volumes:
      - ./fluxo-de-dados/data_lake:/data_lake:ro
      - ./fluxo-de-dados/dm/views.sql:/dm/views.sql:ro
      - ./fluxo-de-dados/output:/output
    secrets:
      - dw_db_user
      - dw_db_password
      - dw_db_name
    command: >
      sh -lc "
        python /app/load_to_dw.py &&
        export PGPASSWORD="$(cat "$$DB_PASSWORD_FILE")" &&
        psql -h $$DB_HOST -U $$(cat $$DB_USER_FILE) -d $$(cat $$DB_NAME_FILE) -f /dm/views.sql &&
        python /app/dashboard.py
      "
  nginx:
    build: ./nginx/.
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"

volumes:
  pgdata:

secrets:
  app_db_user:      { file: ./.secrets/app_db_user }
  app_db_password:  { file: ./.secrets/app_db_password }
  app_db_name:      { file: ./.secrets/app_db_name }
  dw_db_user:       { file: ./.secrets/dw_db_user }
  dw_db_password:   { file: ./.secrets/dw_db_password }
  dw_db_name:       { file: ./.secrets/dw_db_name }
